 int maxSubArray(vector<int>& arr) {
    int n= arr.size();
    long long maxi = LONG_MIN; 
    long long sum = 0;

    for (int i = 0; i < n; i++) {

        sum += arr[i];

        if (sum > maxi) {
            maxi = sum;
        }

       
        if (sum < 0) {
            sum = 0;
        }
    }
    return maxi;   
   }


WITHOUT KADANE'S ALGO(TIME COMPLEXITY 0(N3)
 int maxSubArray(vector<int>& arr) {
        int n = arr.size();
            int maxi =INT_MIN;
            for(int i=0;i<n;i++){
                for(int j= i;j< n;j++){
                    int sum =0;
                    for(int k =i;k<=j;k++){
                        sum = sum + arr[k];
                    }
                    maxi= max(maxi,sum);
                }
            }

        
        return maxi;
        
        
    }
